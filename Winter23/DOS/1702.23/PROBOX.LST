Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 1
probox.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     locals @@
      4
      5				     org 80h
      6	0080  ??		     ArgCount:	     db	?
      7	0081  ??		     Args:	     db	?
      8
      9				     org 100h
     10
     11	0100			     Start:
     12
     13	0100  B8 B800				     mov ax, 0b800h		     ; адрес сегмента с		    +
     14				     видеопамятью -> es
     15	0103  8E C0				     mov es, ax			     ;
     16
     17						     ; mov ax, ss		       ; Segment with stack, code, etc.
     18						     ; mov ds, ax		       ;
     19
     20						     ; mov ah, 00001010b	       ; Light green on	black
     21						     ; mov bx, 160d*18 + 160d/2	- 18d*2	+ 4d; Середина строчки
     22						     ; mov ch, 5		       ; Height
     23						     ; mov cl, 18		       ; Width
     24						     ; call DrawBox
     25	0105  BF 0B70				     mov di, 160d*18 + 160d/2 -	18d*2 +	4d; Середина строчки
     26	0108  B9 0005				     mov cx, 5			     ; Width
     27	010B  50 55 8B EC C7 46	02+		     push 002DAh
     28	      02DA 5D
     29	0115  50 55 8B EC C7 46	02+		     push 002CDh
     30	      02CD 5D
     31	011F  50 55 8B EC C7 46	02+		     push 002BAh
     32	      02BA 5D
     33	0129  E8 00EC				     call DrawLine
     34	012C  58				     pop ax
     35	012D  58				     pop ax
     36	012E  58				     pop ax
     37
     38
     39						     ; mov dh, 00000010b	       ; Dark green on black
     40						     ; pop ax			       ; Scanned number
     41						     ; push ax			       ;
     42
     43						     ; call PrintNBin
     44
     45	012F  B8 4C00				     mov ax, 4c00h		     ; exit(0)
     46	0132  CD 21				     int 21h
     47
     48
     49
     50
     51
     52				     ;------------------------------------------------
     53				     ; Draws cool box on the screen
     54				     ;------------------------------------------------
     55				     ; Entry:	     AH	= color	attr
     56				     ;		     BX	= start	addr to	draw
     57				     ;		     CH	= height of box
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 2
probox.asm



     58				     ;		     CL	= width	of box
     59				     ;
     60				     ; Expects:	     ES	-> Video segment
     61				     ;
     62				     ; Exit:	     None
     63				     ;
     64				     ; Destroys:     AL	BX DX
     65				     ;------------------------------------------------
     66
     67	0134			     DrawBox	     proc
     68						     ; push cx			       ; Store cx to stack
     69	0134  8B D1				     mov dx, cx			     ; Store cx	to dx
     70
     71	0136  A0 0010r				     mov al, byte ptr [BoxSymbols]   ; "?" -> ax (colored)
     72	0139  26: 89 07				     mov es:[bx], ax		     ;
     73
     74										     ;-------------------------------------------
     75
     76	013C  A0 0011r				     mov al, byte ptr [BoxSymbols+1] ; "?" -> ax (colored)
     77	013F  B5 00				     mov ch, 0			     ; cx = width
     78	0141  83 E9 02				     sub cx, 2d
     79	0144			     @@UpLine:					     ; <-----------------\
     80	0144  83 C3 02				     add bx, 2			     ; b+=2 (Next char)	 |
     81	0147  26: 89 07				     mov es:[bx], ax		     ;			 |
     82										     ;			 |
     83	014A  E2 F8				     loop @@UpLine		     ; >-----------------/
     84
     85										     ;-------------------------------------------
     86
     87	014C  A0 0012r				     mov al, byte ptr [BoxSymbols+2] ; "?" -> ax (colored)
     88	014F  83 C3 02				     add bx, 2			     ; b+=2 (Next char)
     89	0152  26: 89 07				     mov es:[bx], ax		     ;
     90
     91										     ;-------------------------------------------
     92
     93	0155  A0 0013r				     mov al, byte ptr [BoxSymbols+3] ; "?" -> ax (colored)
     94						     ; pop cx
     95						     ; push cx
     96	0158  8B CA				     mov cx, dx
     97	015A  8A CD				     mov cl, ch
     98	015C  B5 00				     mov ch, 0			     ; cx = height
     99	015E  83 E9 02				     sub cx, 2d
    100	0161			     @@RightLine:				     ; <-----------------\
    101	0161  81 C3 00A0			     add bx, 160d		     ; b+=160 (Next line)|
    102	0165  26: 89 07				     mov es:[bx], ax		     ;			 |
    103										     ;			 |
    104	0168  E2 F7				     loop @@RightLine		     ; >-----------------/
    105
    106										     ;-------------------------------------------
    107
    108	016A  A0 0014r				     mov al, byte ptr [BoxSymbols+4] ; "?" -> ax (colored)
    109	016D  81 C3 00A0			     add bx, 160d		     ; b+=160 (Next line)|
    110	0171  26: 89 07				     mov es:[bx], ax		     ;
    111
    112										     ;-------------------------------------------
    113
    114	0174  A0 0011r				     mov al, byte ptr [BoxSymbols+1] ; "?" -> ax (colored)
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 3
probox.asm



    115						     ; pop cx
    116						     ; push cx
    117	0177  8B CA				     mov cx, dx
    118	0179  B5 00				     mov ch, 0			     ; cx = width
    119	017B  83 E9 02				     sub cx, 2d
    120	017E			     @@BottomLine:				     ; <-----------------\
    121	017E  83 EB 02				     sub bx, 2			     ; b-=2 (Prev char)	 |
    122	0181  26: 89 07				     mov es:[bx], ax		     ;			 |
    123										     ;			 |
    124	0184  E2 F8				     loop @@BottomLine		     ; >-----------------/
    125
    126										     ;-------------------------------------------
    127
    128	0186  A0 0015r				     mov al, byte ptr [BoxSymbols+5] ; "?" -> ax (colored)
    129	0189  83 EB 02				     sub bx, 2			     ; b+=2 (Next char)
    130	018C  26: 89 07				     mov es:[bx], ax		     ;
    131
    132										     ;-------------------------------------------
    133
    134	018F  A0 0013r				     mov al, byte ptr [BoxSymbols+3] ; "?" -> ax (colored)
    135						     ; pop cx
    136						     ; push cx
    137	0192  8B CA				     mov cx, dx
    138	0194  8A CD				     mov cl, ch
    139	0196  B5 00				     mov ch, 0			     ; cx = height
    140	0198  83 E9 02				     sub cx, 2d
    141	019B			     @@LeftLine:				     ; <-----------------\
    142	019B  81 EB 00A0			     sub bx, 160d		     ; b+=160 (Next line)|
    143	019F  26: 89 07				     mov es:[bx], ax		     ;			 |
    144										     ;			 |
    145	01A2  E2 F7				     loop @@LeftLine		     ; >-----------------/
    146
    147										     ;-------------------------------------------
    148
    149						     ; pop cx			       ; Clear stack
    150	01A4  8B CA				     mov cx, dx
    151
    152	01A6  C3				     ret
    153	01A7			     DrawBox	     endp
    154
    155				     ;------------------------------------------------
    156				     ;------------------------------------------------
    157
    158				     include ..\LianLib\ScanNDec.asm
1   159				     ;------------------------------------------------
1   160				     ; Scans number as decimal
1   161				     ;------------------------------------------------
1   162				     ; Entry:	     none
1   163				     ;
1   164				     ; Expects:	     BX	= 0
1   165				     ;
1   166				     ; Exit:	     BX	= number to print
1   167				     ;
1   168				     ; Destroys:     AX	CL Si
1   169				     ;------------------------------------------------
1   170				     ;------------------------------------------------
1   171	01A7			     ScanNDec	     proc
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 4
probox.asm



1   172
1   173	01A7			     @@ScanDigit:				     ; <??????????????????????????
1   174										     ;				 ?
1   175	01A7  B4 01				     mov ah, 01h		     ; getc -> al		 ?
1   176	01A9  CD 21				     int 21h			     ; ^			 ?
1   177										     ;				 ?
1   178	01AB  3C 0D				     cmp al, 13d		     ; Stop scan if enter	 ?
1   179	01AD  74 15				     je	@@EndScanDigit		     ; >>?????????????????????????????????
1   180										     ;				 ?	 ?
1   181	01AF  8A C8				     mov cl, al			     ; Store al	to cl		 ?	 ?
1   182										     ;				 ?	 ?
1   183	01B1  8B C3				     mov ax, bx			     ; bx *= 10			 ?	 ?
1   184	01B3  BE 000A				     mov si, 10d		     ; ^			 ?	 ?
1   185	01B6  F7 E6				     mul si			     ; ^			 ?	 ?
1   186	01B8  8B D8				     mov bx, ax			     ; ^			 ?	 ?
1   187										     ;				 ?	 ?
1   188	01BA  8A C1				     mov al, cl			     ; Retore al from cl	 ?	 ?
1   189										     ;				 ?	 ?
1   190	01BC  2C 30				     sub al, "0"		     ; ASCII "0" offset		 ?	 ?
1   191										     ;				 ?	 ?
1   192	01BE  B4 00				     mov ah, 0d			     ; bx += al			 ?	 ?
1   193	01C0  03 D8				     add bx, ax			     ; ^			 ?	 ?
1   194										     ;				 ?	 ?
1   195	01C2  EB E3				     jmp @@ScanDigit		     ; >??????????????????????????	 ?
1   196										     ;					 ?
1   197	01C4			     @@EndScanDigit:				     ; <<?????????????????????????????????
1   198	01C4  C3				     ret
1   199
1   200	01C5			     ScanNDec	     endp
1   201
1   202				     ;------------------------------------------------
1   203				     ;------------------------------------------------
1   204
    205				     include ..\LianLib\PrntNBin.asm
1   206				     ;------------------------------------------------
1   207				     ; Prints number as	binary to vidmem
1   208				     ;------------------------------------------------
1   209				     ; Entry:	     AX	= number to print
1   210				     ;		     BX	= start	addr to	print
1   211				     ;
1   212				     ; Expects:	     ES	-> Video segment
1   213				     ;		     DH	= color	code
1   214				     ;
1   215				     ; Exit:	     None
1   216				     ;
1   217				     ; Destroys:     AX	BX CX DL
1   218				     ;------------------------------------------------
1   219				     ;------------------------------------------------
1   220	01C5			     PrintNBin	     proc
1   221
1   222	01C5  B9 0010				     mov cx, 16d		     ; 16 bit in 2 byte	in ax
1   223
1   224	01C8			     @@PrintDigit:				     ; <-------------------------\
1   225										     ;				 |
1   226	01C8  B2 01				     mov dl, 00000001b		     ; Mask			 |
1   227	01CA  22 D0				     and dl, al			     ;				 |
1   228	01CC  80 C2 30				     add dl, 30h		     ; ASCII "0" offset		 |
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 5
probox.asm



1   229										     ;				 |
1   230	01CF  26: 89 17				     mov word ptr es:[bx], dx	     ; Print dl	on position bx	 |
1   231										     ;				 |
1   232	01D2  4B				     dec bx			     ; Next digit		 |
1   233	01D3  4B				     dec bx			     ; ^			 |
1   234										     ;				 |
1   235	01D4  D1 E8				     shr ax, 1d			     ; ax >> 1			 |
1   236										     ;				 |
1   237	01D6  E2 F0				     loop @@PrintDigit		     ; >-------------------------/
1   238
1   239	01D8  C3				     ret
1   240
1   241	01D9			     PrintNBin	     endp
1   242
1   243				     ;------------------------------------------------
1   244				     ;------------------------------------------------
1   245
    246				     include ..\LianLib\PrntNHex.asm
1   247				     ;------------------------------------------------
1   248				     ; Prints number as	hexagen	to vidmem
1   249				     ;------------------------------------------------
1   250				     ; Entry:	     AX	= number to print
1   251				     ;		     BX	= start	addr to	print
1   252				     ;
1   253				     ; Expects:	     ES	-> Video segment
1   254				     ;		     DH	= color	code
1   255				     ;
1   256				     ; Exit:	     None
1   257				     ;
1   258				     ; Destroys:     AX	BX CX DL Si
1   259				     ;------------------------------------------------
1   260				     ;------------------------------------------------
1   261	01D9			     PrintNHex	     proc
1   262
1   263	01D9  B9 0004				     mov cx, 4d			     ; 4 digits	in 2 byte in ax
1   264
1   265	01DC			     @@PrintDigit:				     ; <-------------------------\
1   266										     ;				 |
1   267	01DC  B2 0F				     mov dl, 00001111b		     ; Mask			 |
1   268	01DE  22 D0				     and dl, al			     ;				 |
1   269										     ;				 |
1   270	01E0  8B F2				     mov si, dx			     ; dl -> si			 |
1   271	01E2  83 E6 0F				     and si, 0Fh		     ;				 |
1   272										     ;				 |
1   273	01E5  8A 94 0000r			     mov dl, byte ptr [Alphabet]+si  ; ASCII "0" offset		 |
1   274										     ;				 |
1   275	01E9  26: 89 17				     mov word ptr es:[bx], dx	     ; Print dl	on position bx	 |
1   276										     ;				 |
1   277	01EC  4B				     dec bx			     ; Next digit		 |
1   278	01ED  4B				     dec bx			     ; ^			 |
1   279										     ;				 |
1   280	01EE  D1 E8 D1 E8 D1 E8	D1+		     shr ax, 4d			     ; ax >> 4			 |
    281	      E8
1   282										     ;				 |
1   283	01F6  E2 E4				     loop @@PrintDigit		     ; >-------------------------/
1   284
1   285	01F8  C3				     ret
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 6
probox.asm



1   286
1   287	01F9			     PrintNHex	     endp
1   288
1   289				     ;------------------------------------------------
1   290				     ;------------------------------------------------
1   291
    292				     include ..\LianLib\PrntNDec.asm
1   293				     ;------------------------------------------------
1   294				     ; Prints number as	decimal	to vidmem
1   295				     ;------------------------------------------------
1   296				     ; Entry:	     AX	= number to print
1   297				     ;		     BX	= start	addr to	print
1   298				     ;
1   299				     ; Expects:	     ES	-> Video segment
1   300				     ;		     DH	= color	code
1   301				     ;
1   302				     ; Exit:	     None
1   303				     ;
1   304				     ; Destroys:     AX	BX CX DL Si
1   305				     ;------------------------------------------------
1   306				     ;------------------------------------------------
1   307	01F9			     PrintNDec	     proc
1   308
1   309	01F9  B9 0005				     mov cx, 5d			     ; 5 digits	in 2 byte in ax
1   310
1   311	01FC			     @@PrintDigit:				     ; <-------------------------\
1   312	01FC  8A EE				     mov ch, dh			     ; Store dh	to ch		 |
1   313										     ;				 |
1   314	01FE  BA 0000				     mov dx, 0d			     ; for division		 |
1   315	0201  BE 000A				     mov si, 10d		     ; ax/10 ->	ax &		 |
1   316	0204  F7 F6				     div si			     ; & ax%10 -> dx		 | !!! dx < 10
1   317										     ;				 |
1   318	0206  8B F2				     mov si, dx			     ; dl -> si			 |
1   319										     ;				 |
1   320	0208  8A 94 0000r			     mov dl, byte ptr [Alphabet]+si  ; ASCII "0" offset		 |
1   321										     ;				 |
1   322	020C  8A F5				     mov dh, ch			     ; Restore dh from ch	 |
1   323	020E  B5 00				     mov ch, 0			     ; ^			 |
1   324										     ;				 |
1   325	0210  26: 89 17				     mov word ptr es:[bx], dx	     ; Print dl	on position bx	 |
1   326										     ;				 |
1   327	0213  4B				     dec bx			     ; Next digit		 |
1   328	0214  4B				     dec bx			     ; ^			 |
1   329										     ;				 |
1   330										     ;				 |
1   331	0215  E2 E5				     loop @@PrintDigit		     ; >-------------------------/
1   332
1   333	0217  C3				     ret
1   334
1   335	0218			     PrintNDec	     endp
1   336
1   337				     ;------------------------------------------------
1   338				     ;------------------------------------------------
1   339
    340
    341				     include ..\LianLib\DrawLine.asm
1   342				     ;------------------------------------------------
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 7
probox.asm



1   343				     ; Draws line on the screen	(Pattern ABB~BBC)
1   344				     ;------------------------------------------------
1   345				     ; Entry:	     DI	= start	addr to	draw
1   346				     ;		     CX	= width	of line	(without A&C)
1   347				     ;
1   348				     ; Expects:	     ES	-> Video segment
1   349				     ;		     DF	= 0 (CLD)
1   350				     ;
1   351				     ; Exit:	     None
1   352				     ;
1   353				     ; Destroys:     AX	CX DI
1   354				     ;------------------------------------------------
1   355				     ; Stack frame:
1   356				     ;		     ...
1   357				     ;		     'A' char	 [bp + 8]    //	H - color attr
1   358				     ;		     'B' char	 [bp + 6]    //	L - symb attr
1   359				     ;		     'C' char	 [bp + 4]    //
1   360				     ;		     retAddr	 [bp + 2]
1   361				     ;		     stored BP	 [bp]
1   362				     ;		     ...
1   363				     ;------------------------------------------------
1   364				     ;Направление просмотра	 зависит	 от флага		    +
    365				     направления DF,	значение  которого  можно	менять  с    +
    366				     помощью команд CLD (DF:=0) и	STD (DF:=1).
1   367
1   368	0218			     DrawLine	     proc
1   369	0218  55				     push bp
1   370	0219  8B EC				     mov bp, sp			     ; Complete	stack frame
1   371
1   372	021B  8B 46 08				     mov ax, [bp + 8]
1   373	021E  AB				     stosw
1   374
1   375	021F  8B 46 06				     mov ax, [bp + 6]
1   376	0222  F3> AB				     rep stosw
1   377
1   378	0224  8B 46 04				     mov ax, [bp + 4]
1   379	0227  AB				     stosw
1   380
1   381	0228  5D				     pop bp			     ; Stack frame
1   382	0229  C3				     ret
1   383	022A			     DrawLine	     endp
1   384
1   385				     ;------------------------------------------------
1   386				     ;------------------------------------------------
1   387
    388
    389	022A			     .data
    390				     include ..\LianLib\Alphabet.asm
1   391	0000  30 31 32 33 34 35	36+  Alphabet:	     db	"0123456789ABCDEF"	     ; Alphabet	for printing (Thanks Ilya)
    392	      37 38 39 41 42 43	44+
    393	      45 46
1   394	0010  C9 CD BB BA BC C8	     BoxSymbols:     db	0c9h, 0cdh, 0bbh, 0bah,	0bch, 0c8h ; "╔═╗║╝╚"
1   395
1   396	0016  20 DA C9		     BoxAssetLU:     db	020h, 0dah, 0c9h
1   397	0019  20 C4 CD		     BoxAsset_U:     db	020h, 0c4h, 0cdh
1   398	001C  20 BF BB		     BoxAssetRU:     db	020h, 0bfh, 0bbh
1   399	001F  20 B3 BA		     BoxAssetR_:     db	020h, 0b3h, 0bah
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 8
probox.asm



1   400	0022  20 D9 BC		     BoxAssetRB:     db	020h, 0d9h, 0bch
1   401	0025  20 C4 CD		     BoxAsset_B:     db	020h, 0c4h, 0cdh
1   402	0028  20 C0 C8		     BoxAssetLB:     db	020h, 0c0h, 0c8h
1   403	002B  20 B3 BA		     BoxAssetL_:     db	020h, 0b3h, 0bah
1   404	002E  20 20 20		     BoxAssetFI:     db	020h, 020h, 020h
1   405
1   406				     ; 0:    1:┌─┐ 2:╔═╗
1   407				     ;	       │ │	 ║ ║
1   408				     ;	       └─┘   ╚═╝
1   409
    410
    411				     end	     Start
Turbo Assembler	 Version 4.1	    03/02/23 19:59:38	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/02/23"
??FILENAME			  Text	 "probox  "
??TIME				  Text	 "19:59:37"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@BOTTOMLINE			  Near	 DGROUP:017E
@@ENDSCANDIGIT			  Near	 DGROUP:01C4
@@LEFTLINE			  Near	 DGROUP:019B
@@PRINTDIGIT			  Near	 DGROUP:01C8
@@PRINTDIGIT			  Near	 DGROUP:01DC
@@PRINTDIGIT			  Near	 DGROUP:01FC
@@RIGHTLINE			  Near	 DGROUP:0161
@@SCANDIGIT			  Near	 DGROUP:01A7
@@UPLINE			  Near	 DGROUP:0144
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROBOX
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALPHABET			  Near	 DGROUP:0000
ARGCOUNT			  Near	 DGROUP:0080
ARGS				  Near	 DGROUP:0081
BOXASSETFI			  Near	 DGROUP:002E
BOXASSETLB			  Near	 DGROUP:0028
BOXASSETLU			  Near	 DGROUP:0016
BOXASSETL_			  Near	 DGROUP:002B
BOXASSETRB			  Near	 DGROUP:0022
BOXASSETRU			  Near	 DGROUP:001C
BOXASSETR_			  Near	 DGROUP:001F
BOXASSET_B			  Near	 DGROUP:0025
BOXASSET_U			  Near	 DGROUP:0019
BOXSYMBOLS			  Near	 DGROUP:0010
DRAWBOX				  Near	 DGROUP:0134
DRAWLINE			  Near	 DGROUP:0218
PRINTNBIN			  Near	 DGROUP:01C5
PRINTNDEC			  Near	 DGROUP:01F9
PRINTNHEX			  Near	 DGROUP:01D9
SCANNDEC			  Near	 DGROUP:01A7
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0031 Word	  Public  DATA
  _TEXT				  16  022A Word	  Public  CODE
