Turbo Assembler	 Version 4.1	    03/07/23 14:35:23	    Page 1
ints.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     org 100h
      4
      5	0100  EB 01 90		     Start:	     jmp Main
      6
      7
      8
      9	0103			     Main:
     10	0103  BB B800				     mov bx, 0b800h
     11	0106  8E C3				     mov es, bx
     12	0108  BB 0370				     mov bx, 160d*5 + 80d
     13
     14	010B  B4 4E				     mov ah, 4eh
     15
     16	010D  E4 60		     Next:	     in	al, 60h
     17	010F  BB 0370				     mov bx, 160d*5 + 80d
     18	0112  26: 89 07				     mov es:[bx], ax
     19	0115  50				     push ax
     20	0116  83 C3 0A				     add bx, 10
     21	0119  E8 000A				     call PrintNHex
     22
     23	011C  58				     pop ax
     24	011D  3C 01				     cmp al, 1
     25	011F  75 EC				     jne Next
     26
     27	0121  B8 4C00				     mov ax, 4c00h
     28	0124  CD 21				     int 21h
     29
     30
     31				     include ..\LianLib\PrntNHex.asm
1    32				     ;------------------------------------------------
1    33				     ; Prints number as	hexagen	to vidmem
1    34				     ;------------------------------------------------
1    35				     ; Entry:	     AX	= number to print
1    36				     ;		     BX	= start	addr to	print
1    37				     ;
1    38				     ; Expects:	     ES	-> Video segment
1    39				     ;		     DH	= color	code
1    40				     ;
1    41				     ; Exit:	     None
1    42				     ;
1    43				     ; Destroys:     AX	BX CX DL Si
1    44				     ;------------------------------------------------
1    45				     ;------------------------------------------------
1    46	0126			     PrintNHex	     proc
1    47
1    48	0126  B9 0004				     mov cx, 4d			     ; 4 digits	in 2 byte in ax
1    49
1    50	0129			     @@PrintDigit:				     ; <-------------------------\
1    51										     ;				 |
1    52	0129  B2 0F				     mov dl, 00001111b		     ; Mask			 |
1    53	012B  22 D0				     and dl, al			     ;				 |
1    54										     ;				 |
1    55	012D  8B F2				     mov si, dx			     ; dl -> si			 |
1    56	012F  83 E6 0F				     and si, 0Fh		     ;				 |
1    57										     ;				 |
Turbo Assembler	 Version 4.1	    03/07/23 14:35:23	    Page 2
ints.asm



1    58	0132  8A 94 0000r			     mov dl, byte ptr [Alphabet]+si  ; ASCII "0" offset		 |
1    59										     ;				 |
1    60	0136  26: 89 17				     mov word ptr es:[bx], dx	     ; Print dl	on position bx	 |
1    61										     ;				 |
1    62	0139  4B				     dec bx			     ; Next digit		 |
1    63	013A  4B				     dec bx			     ; ^			 |
1    64										     ;				 |
1    65	013B  D1 E8 D1 E8 D1 E8	D1+		     shr ax, 4d			     ; ax >> 4			 |
     66	      E8
1    67										     ;				 |
1    68	0143  E2 E4				     loop @@PrintDigit		     ; >-------------------------/
1    69
1    70	0145  C3				     ret
1    71
1    72	0146			     PrintNHex	     endp
1    73
1    74				     ;------------------------------------------------
1    75				     ;------------------------------------------------
1    76
     77
     78	0146			     .data
     79				     include ..\LianLib\Alphabet.asm
1    80	0000  30 31 32 33 34 35	36+  Alphabet:	     db	"0123456789ABCDEF"	     ; Alphabet	for printing (Thanks Ilya)
     81	      37 38 39 41 42 43	44+
     82	      45 46
1    83	0010  C9 CD BB BA BC C8	     BoxSymbols:     db	0c9h, 0cdh, 0bbh, 0bah,	0bch, 0c8h ; "╔═╗║╝╚"
1    84
1    85	0016			     BoxAssetStart:
1    86	0016  20 DA C9 00	     BoxAssetLU:     db	020h, 0dah, 0c9h, 000h
1    87	001A			     BoxAssetStep:
1    88	001A  20 C4 CD 00	     BoxAsset_U:     db	020h, 0c4h, 0cdh, 000h
1    89	001E  20 BF BB 00	     BoxAssetRU:     db	020h, 0bfh, 0bbh, 000h
1    90	0022  20 B3 BA 00	     BoxAssetR_:     db	020h, 0b3h, 0bah, 000h
1    91	0026  20 D9 BC 00	     BoxAssetRB:     db	020h, 0d9h, 0bch, 000h
1    92	002A  20 C4 CD 00	     BoxAsset_B:     db	020h, 0c4h, 0cdh, 000h
1    93	002E  20 C0 C8 00	     BoxAssetLB:     db	020h, 0c0h, 0c8h, 000h
1    94	0032  20 B3 BA 00	     BoxAssetL_:     db	020h, 0b3h, 0bah, 000h
1    95	0036  20 20 20 00	     BoxAssetFI:     db	020h, 020h, 020h, 000h
1    96	003A			     BoxAssetEnd:
1    97
1    98				     ; 0:    1:┌─┐ 2:╔═╗ 3:usr
1    99				     ;	       │ │	 ║ ║   chr
1   100				     ;	       └─┘   ╚═╝
1   101
    102
    103				     end	     Start
Turbo Assembler	 Version 4.1	    03/07/23 14:35:23	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/07/23"
??FILENAME			  Text	 "ints	  "
??TIME				  Text	 "14:35:23"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@PRINTDIGIT			  Near	 DGROUP:0129
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 INTS
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALPHABET			  Near	 DGROUP:0000
BOXASSETEND			  Near	 DGROUP:003A
BOXASSETFI			  Near	 DGROUP:0036
BOXASSETLB			  Near	 DGROUP:002E
BOXASSETLU			  Near	 DGROUP:0016
BOXASSETL_			  Near	 DGROUP:0032
BOXASSETRB			  Near	 DGROUP:0026
BOXASSETRU			  Near	 DGROUP:001E
BOXASSETR_			  Near	 DGROUP:0022
BOXASSETSTART			  Near	 DGROUP:0016
BOXASSETSTEP			  Near	 DGROUP:001A
BOXASSET_B			  Near	 DGROUP:002A
BOXASSET_U			  Near	 DGROUP:001A
BOXSYMBOLS			  Near	 DGROUP:0010
MAIN				  Near	 DGROUP:0103
NEXT				  Near	 DGROUP:010D
PRINTNHEX			  Near	 DGROUP:0126
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  003A Word	  Public  DATA
  _TEXT				  16  0146 Word	  Public  CODE
